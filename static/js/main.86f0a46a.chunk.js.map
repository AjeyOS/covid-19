{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Charts/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Card.jsx","components/Charts/Footer.jsx","App.js","index.js","App.module.css","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","url","FetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","console","log","fetchDailyData","modifieddata","map","mydata","total","date","reportDate","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","value","options","legend","display","title","text","className","styles","container","CountryPicker","handleCountryChange","fetchedcountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","Cards","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Foot","style","padding","getFullYear","href","App","state","FetchedData","setState","this","Style","image","src","images","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,8JCC7JC,EAAK,iCAGEC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACrBC,EAAgBJ,EAChBE,IACAE,EAAa,UAAMJ,EAAN,sBAAuBE,IAHf,kBAM+CG,IAAMC,IAAIF,GANzD,2BAMVG,KAAMC,EANI,EAMJA,UAAWC,EANP,EAMOA,UAAWC,EANlB,EAMkBA,OAAQC,EAN1B,EAM0BA,WAN1B,kBASV,CAACH,YAAWC,YAAWC,SAAQC,eATrB,kCAWjBC,QAAQC,IAAR,MAXiB,0DAAH,sDAmBTC,EAAc,uCAAG,gCAAAX,EAAA,+EAGFE,IAAMC,IAAN,UAAaN,EAAb,WAHE,uBAGhBO,EAHgB,EAGhBA,KAEDQ,EAAeR,EAAKS,KAAI,SAACC,GAAD,MAAa,CACvCT,UAAYS,EAAOT,UAAUU,MAC7BR,OAASO,EAAOP,OAAOQ,MACvBC,KAAOF,EAAOG,eARK,kBAWhBL,GAXgB,yFAAH,qDAuBdM,EAAc,uCAAG,8BAAAlB,EAAA,+EAIaE,IAAMC,IAAN,UAAaN,EAAb,eAJb,uBAIPsB,EAJO,EAIff,KAAQe,UAJO,kBAKfA,EAAUN,KAAI,SAACd,GAAD,OAAaA,EAAQqB,SALpB,gCAO9BX,QAAQC,IAAR,MAP8B,yDAAH,qD,yBCsCZW,EAhFD,SAAC,GAAoD,IAAD,IAAlDjB,KAAMC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,OAASR,EAAa,EAAbA,QAAa,EAE5BuB,mBAAS,IAFmB,mBAEvDC,EAFuD,KAE5CC,EAF4C,KAG9DC,qBAAU,YACA,uCAAG,sBAAAzB,EAAA,kEAEbwB,EAFa,SAEMb,IAFN,6EAAH,qDAKde,KAGO,IAGD,IAAMC,EACJJ,EAAUK,OACT,kBAAC,IAAD,CACDxB,KAAM,CAEFyB,OAAQN,EAAUV,KAAI,qBAAEG,QACxBc,SAAS,CAAC,CACN1B,KAAMmB,EAAUV,KAAI,qBAAER,aACtB0B,MAAM,WACNC,YAAY,UACZC,MAAK,GAEP,CACE7B,KAAMmB,EAAUV,KAAI,qBAAEN,UACtBwB,MAAM,SACNC,YAAY,MACZE,gBAAgB,uBAChBD,MAAK,OAKZ,KAMCE,EACJ9B,EACG,kBAAC,IAAD,CACTD,KAAQ,CACJyB,OAAQ,CAAC,WAAY,YAAY,UACjCC,SAAS,CAAC,CACNC,MAAO,SACPG,gBAAgB,CACZ,uBACZ,uBACA,wBAEQ9B,KAAK,CAACC,EAAU+B,MAAO9B,EAAU8B,MAAO7B,EAAO6B,UAGvDC,QAAU,CACNC,OAAQ,CAACC,SAAQ,GACjBC,MAAO,CAACD,SAAQ,EAAME,KAAK,oBAAD,OAAqB1C,OAMzC,KAEV,OAEI,yBAAK2C,UAAWC,IAAOC,WAClB7C,EAAUoC,EAAWR,I,mCC9CfkB,EA1BO,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,oBAAyB,EAEGxB,mBAAS,IAFZ,mBAEtCyB,EAFsC,KAEpBC,EAFoB,KAajD,OATIvB,qBAAU,YACQ,uCAAG,sBAAAzB,EAAA,kEAEbgD,EAFa,SAEa9B,IAFb,6EAAH,qDAIdQ,KACF,CAACsB,IACHvC,QAAQC,IAAIqC,GAGZ,kBAACE,EAAA,EAAD,CAAaP,UAAaC,IAAOM,aACjC,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOP,EAAoBO,EAAEC,OAAOlB,SAChF,4BAAQA,MAAM,IAAd,UACCW,EAAiBlC,KAAI,SAACd,EAASwD,GAAV,OAAgB,4BAAQC,IAAKD,EAAGnB,MAAOrC,GAAUA,S,wGCiCxD0D,EA9CD,SAAC,GAAuD,IAAD,IAArDrD,KAAMC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WACpD,OAAIF,EAIG,yBAAKoC,UAAWC,IAAOC,WAE9B,kBAACc,EAAA,EAAD,CAAMd,WAAS,EAACe,QAAW,EAAGC,QAAQ,UACtC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAIvB,UAAawB,IAAGvB,IAAOwB,KAAMxB,IAAOyB,WAChF,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAAK,kBAAC,IAAD,CAAUC,MAAS,EAAGC,IAAOtE,EAAU+B,MAAOwC,SAAW,IAAKC,UAAY,OAEnG,kBAACP,EAAA,EAAD,CAAYC,MAAM,iBAAkB,IAAIO,KAAKtE,GAAYuE,gBACzD,kBAACT,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAIA,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAIvB,UAAawB,IAAGvB,IAAOwB,KAAMxB,IAAOrC,YAChF,kBAAC+D,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAAK,kBAAC,IAAD,CAAUC,MAAS,EAAGC,IAAOrE,EAAU8B,MAAOwC,SAAW,IAAKC,UAAY,OAEnG,kBAACP,EAAA,EAAD,CAAYC,MAAM,iBAAkB,IAAIO,KAAKtE,GAAYuE,gBACzD,kBAACT,EAAA,EAAD,CAAYG,QAAQ,SAApB,yCAIA,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAIvB,UAAawB,IAAGvB,IAAOwB,KAAMxB,IAAOpC,SAChF,kBAAC8D,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAAK,kBAAC,IAAD,CAAUC,MAAS,EAAGC,IAAOpE,EAAO6B,MAAOwC,SAAW,IAAKC,UAAY,OAChG,kBAACP,EAAA,EAAD,CAAYC,MAAM,iBAAkB,IAAIO,KAAKtE,GAAYuE,gBACzD,kBAACT,EAAA,EAAD,CAAYG,QAAQ,SAApB,4CA/BW,c,iBCREO,EAAO,WAEhB,OACI,uBAAGC,MAAO,CAACC,QAAQ,SAAnB,SACM,IAAIJ,MAAOK,cADjB,mBAC+C,uBAAGC,KAAK,sBAAR,iBCoCxCC,E,4MAhCXC,MAAQ,CACJlF,KAAK,GACLL,QAAQ,I,EAQZ+C,oB,uCAAsB,WAAM/C,GAAN,eAAAC,EAAA,sEACOF,EAAUC,GADjB,OACZwF,EADY,OAElB,EAAKC,SAAS,CAACpF,KAAKmF,EAAaxF,QAAQA,IAFvB,2C,wPALOD,I,OAAnByF,E,OACNE,KAAKD,SAAS,CAACpF,KAAKmF,I,qIASnB,IAAD,EAEqBE,KAAKH,MAAtBlF,EAFJ,EAEIA,KAAML,EAFV,EAEUA,QACd,OAAQ,yBAAK2C,UAAWgD,IAAM9C,WAC/B,yBAAKF,UAAWgD,IAAMC,MAAOC,IAAKC,IAAQC,IAAI,aACjD,kBAAC,EAAD,CAAO1F,KAAMA,IACb,kBAAC,EAAD,CAAe0C,oBAAqB2C,KAAK3C,sBACrC,kBAAC,EAAD,CAAO1C,KAAMA,EAAML,QAASA,IAC5B,kBAAC,EAAD,W,GAzBcgG,IAAMC,WCJxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCHjDzG,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,4B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC,mBCDhCD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.86f0a46a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__6zlRP\",\"card\":\"Cards_card__9FoQR\",\"infected\":\"Cards_infected__mM3Fy\",\"recovered\":\"Cards_recovered__3qtBN\",\"deaths\":\"Cards_deaths__3TN0Q\"};","\r\nimport axios from 'axios';\r\nconst url =\"https://covid19.mathdro.id/api\";\r\n\r\n\r\nexport const FetchData = async (country) => {\r\nlet changeableUrl = url;\r\nif (country){\r\n    changeableUrl = `${url}/countries/${country}`\r\n}\r\n    try{\r\n        const {data:{confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl);\r\n\r\n\r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n    }catch(error){\r\n        console.log(error);\r\n\r\n    }\r\n    \r\n}\r\n    \r\n\r\n\r\nexport const fetchDailyData = async () => {\r\n\r\n    try{\r\n       const {data} = await axios.get(`${url}/daily`);\r\n\r\n       const modifieddata = data.map((mydata) => ({\r\n           confirmed : mydata.confirmed.total,\r\n           deaths : mydata.deaths.total,\r\n           date : mydata.reportDate\r\n       })) ;\r\n       \r\n       return modifieddata;\r\n \r\n    }\r\n\r\n    catch (error){ \r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n\r\n    try{\r\n\r\n        const {data : {countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n    }catch(err){\r\nconsole.log(err);\r\n    }\r\n}","import React,{useState, useEffect} from \"react\";\r\nimport {fetchDailyData}  from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Charts.module.css';\r\n\r\nconst Chart = ({data:{confirmed, recovered, deaths}, country}) => {\r\n\r\n    const [dailyData, setDailyData] = useState([]);\r\n    useEffect(() => {\r\nconst fetchAPI = async () => {\r\n\r\n    setDailyData(await fetchDailyData());\r\n}\r\n\r\nfetchAPI();\r\n\r\n\r\n    }, [])\r\n\r\n\r\n      const lineChart = (\r\n        dailyData.length ?\r\n        (<Line\r\n        data={{\r\n\r\n            labels :dailyData.map(({date}) => date),\r\n            datasets:[{\r\n                data: dailyData.map(({confirmed}) => confirmed),\r\n                label:'infected',\r\n                borderColor:'#3333ff',\r\n                fill:true,\r\n\r\n            },{\r\n                data: dailyData.map(({deaths}) => deaths),\r\n                label:'deaths',\r\n                borderColor:'red',\r\n                backgroundColor:'rgba(255, 0, 0, 0.5)',\r\n                fill:true,\r\n\r\n            }]\r\n        }}\r\n         />):\r\n         null\r\n    )\r\n\r\n\r\n\r\n\r\n    const barChart = (\r\n      confirmed ? \r\n        (<Bar \r\ndata = {{\r\n    labels: ['Infected', 'Recovered','Deaths'],\r\n    datasets:[{\r\n        label: 'People',\r\n        backgroundColor:[\r\n            'rgba(0, 0, 255, 0.5)',\r\n'rgba(0, 255, 0, 0.5)',\r\n'rgba(255, 0, 0, 0.5)'\r\n        ],\r\n        data:[confirmed.value, recovered.value, deaths.value]\r\n    }]\r\n}}\r\noptions ={{\r\n    legend: {display:false},\r\n    title: {display:true, text:`Current State in ${country}` },\r\n}}\r\n\r\n\r\n\r\n        />)\r\n        : null\r\n    )\r\nreturn (\r\n\r\n    <div className={styles.container}>\r\n        {country ? barChart : lineChart}\r\n\r\n    </div>\r\n    \r\n)\r\n\r\n}\r\n\r\n\r\nexport default Chart;","import React,{useState, useEffect} from \"react\";\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from  './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api'\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n\r\n    const [fetchedcountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async() => {\r\n\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n    console.log(fetchedcountries);\r\n\r\nreturn (\r\n    <FormControl className = {styles.FormControl}>\r\n    <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n<option value=\"\">Global</option>\r\n{fetchedcountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n\r\n    </NativeSelect>\r\n     </FormControl>\r\n)\r\n\r\n}\r\n\r\n\r\nexport default CountryPicker;","import React from \"react\";\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\n\r\n\r\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {  \r\nif(!recovered){\r\n    return 'Loading...'\r\n}\r\n\r\nreturn <div className={styles.container}>\r\n\r\n<Grid container spacing = {3} justify=\"center\" >\r\n<Grid item component={Card} xs={12} md={3}  className = {cx(styles.card, styles.infected)}>\r\n<CardContent>\r\n<Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n<Typography variant=\"h5\"><CountUp  start = {0} end = {confirmed.value} duration ={2.5} separator = \",\" />\r\n</Typography>\r\n<Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n<Typography variant=\"body2\" >Numbers of active case of COVID-19</Typography>\r\n</CardContent>\r\n</Grid>\r\n\r\n<Grid item component={Card} xs={12} md={3}  className = {cx(styles.card, styles.recovered)}>\r\n<CardContent>\r\n<Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n<Typography variant=\"h5\"><CountUp  start = {0} end = {recovered.value} duration ={2.5} separator = \",\" />\r\n</Typography>\r\n<Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n<Typography variant=\"body2\" >Numbers of recoveries from COVID-19</Typography>\r\n</CardContent>\r\n</Grid>\r\n\r\n<Grid item component={Card} xs={12} md={3}  className = {cx(styles.card, styles.deaths)}>\r\n<CardContent>\r\n<Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n<Typography variant=\"h5\"><CountUp  start = {0} end = {deaths.value} duration ={2.5} separator = \",\" /></Typography>\r\n<Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n<Typography variant=\"body2\" >Numbers of deaths caused by COVID-19</Typography>\r\n</CardContent>\r\n</Grid>\r\n</Grid>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n}\r\n    \r\n\r\nexport default Cards;","import React from 'react';\r\n\r\nexport const Foot = () => {\r\n\r\n    return (\r\n        <p style={{padding:\"12px\",}}> \r\n          © { new Date().getFullYear()} - Developed by <a href=\"javascript:void(0)\" > Ajay Kumar</a>\r\n      \r\n        </p>)\r\n}","import React from 'react';\nimport Chart from './components/Charts/Chart';\nimport CountryPicker from './components/CountryPicker/CountryPicker';\nimport Style from './App.module.css';\nimport {FetchData} from './api/index';\nimport Cards from './components/Cards/Card';\nimport images from './images/image.png';\nimport {Foot} from './components/Charts/Footer'\nclass App extends React.Component{\n\n    state = {\n        data:{},\n        country:'',\n    }\n    async componentDidMount(){\n        const FetchedData =await FetchData();\n        this.setState({data:FetchedData});\n        \n    }\n\n    handleCountryChange = async(country) => {\n        const FetchedData =await FetchData(country);\n        this.setState({data:FetchedData, country:country});\n    }\n\nrender(){\n\n    const  {data, country} = this.state;\n    return  <div className={Style.container}>\n   <img className={Style.image} src={images} alt=\"COVID-19\"/>\n<Cards data={data}/>\n<CountryPicker handleCountryChange={this.handleCountryChange}/>\n    <Chart data={data} country={country} />\n    <Foot />\n   \n    \n    </div>\n      \n}\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3FIN2\",\"image\":\"App_image__YvhVk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__3lUxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2flrN\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}