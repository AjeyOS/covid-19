{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Charts/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Card.jsx","components/Charts/Footer.jsx","App.js","index.js","App.module.css","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","url","FetchData","country","a","changeableUrl","axios","get","data","cases","recovered","deaths","updated","confirmed","value","lastUpdate","console","log","fetchDailyData","modifiedData","Object","keys","map","date","fetchCountries","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","className","styles","container","CountryPicker","handleCountryChange","fetchedcountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","Cards","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Foot","style","padding","getFullYear","href","App","state","FetchedData","setState","this","Style","image","src","images","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f4ecb7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2fZHa\",\"card\":\"Cards_card__1Kckq\",\"infected\":\"Cards_infected__NmJxr\",\"recovered\":\"Cards_recovered__3NjtL\",\"deaths\":\"Cards_deaths__nrUDA\"};","import axios from 'axios';\r\n\r\nconst url = \"https://disease.sh/v3/covid-19\";\r\n\r\nexport const FetchData = async (country) => {\r\n  let changeableUrl = `${url}/all`;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { cases, recovered, deaths, updated } } = await axios.get(changeableUrl);\r\n\r\n    return {\r\n      confirmed: { value: cases },\r\n      recovered: { value: recovered },\r\n      deaths: { value: deaths },\r\n      lastUpdate: updated,\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/historical/all?lastdays=30`);\r\n\r\n    const modifiedData = Object.keys(data.cases).map((date) => ({\r\n      confirmed: data.cases[date],\r\n      deaths: data.deaths[date],\r\n      date,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/countries`);\r\n    return data.map((country) => country.country);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","import React,{useState, useEffect} from \"react\";\r\nimport {fetchDailyData}  from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Charts.module.css';\r\n\r\nconst Chart = ({data:{confirmed, recovered, deaths}, country}) => {\r\n\r\n    const [dailyData, setDailyData] = useState([]);\r\n    useEffect(() => {\r\nconst fetchAPI = async () => {\r\n\r\n    setDailyData(await fetchDailyData());\r\n}\r\n\r\nfetchAPI();\r\n\r\n\r\n    }, [])\r\n\r\n\r\n      const lineChart = (\r\n        dailyData.length ?\r\n        (<Line\r\n        data={{\r\n\r\n            labels :dailyData.map(({date}) => date),\r\n            datasets:[{\r\n                data: dailyData.map(({confirmed}) => confirmed),\r\n                label:'infected',\r\n                borderColor:'#3333ff',\r\n                fill:true,\r\n\r\n            },{\r\n                data: dailyData.map(({deaths}) => deaths),\r\n                label:'deaths',\r\n                borderColor:'red',\r\n                backgroundColor:'rgba(255, 0, 0, 0.5)',\r\n                fill:true,\r\n\r\n            }]\r\n        }}\r\n         />):\r\n         null\r\n    )\r\n\r\n\r\n\r\n\r\n    const barChart = (\r\n      confirmed ? \r\n        (<Bar \r\ndata = {{\r\n    labels: ['Infected', 'Recovered','Deaths'],\r\n    datasets:[{\r\n        label: 'People',\r\n        backgroundColor:[\r\n            'rgba(0, 0, 255, 0.5)',\r\n'rgba(0, 255, 0, 0.5)',\r\n'rgba(255, 0, 0, 0.5)'\r\n        ],\r\n        data:[confirmed.value, recovered.value, deaths.value]\r\n    }]\r\n}}\r\noptions ={{\r\n    legend: {display:false},\r\n    title: {display:true, text:`Current State in ${country}` },\r\n}}\r\n\r\n\r\n\r\n        />)\r\n        : null\r\n    )\r\nreturn (\r\n\r\n    <div className={styles.container}>\r\n        {country ? barChart : lineChart}\r\n\r\n    </div>\r\n    \r\n)\r\n\r\n}\r\n\r\n\r\nexport default Chart;","import React,{useState, useEffect} from \"react\";\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from  './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api'\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n\r\n    const [fetchedcountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async() => {\r\n\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n    console.log(fetchedcountries);\r\n\r\nreturn (\r\n    <FormControl className = {styles.FormControl}>\r\n    <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n<option value=\"\">Global</option>\r\n{fetchedcountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n\r\n    </NativeSelect>\r\n     </FormControl>\r\n)\r\n\r\n}\r\n\r\n\r\nexport default CountryPicker;","import React from \"react\";\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\n\r\n\r\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {  \r\nif(!recovered){\r\n    return 'Loading...'\r\n}\r\n\r\nreturn <div className={styles.container}>\r\n\r\n<Grid container spacing = {3} justify=\"center\" >\r\n<Grid item component={Card} xs={12} md={3}  className = {cx(styles.card, styles.infected)}>\r\n<CardContent>\r\n<Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n<Typography variant=\"h5\"><CountUp  start = {0} end = {confirmed.value} duration ={2.5} separator = \",\" />\r\n</Typography>\r\n<Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n<Typography variant=\"body2\" >Numbers of active case of COVID-19</Typography>\r\n</CardContent>\r\n</Grid>\r\n\r\n<Grid item component={Card} xs={12} md={3}  className = {cx(styles.card, styles.recovered)}>\r\n<CardContent>\r\n<Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n<Typography variant=\"h5\"><CountUp  start = {0} end = {recovered.value} duration ={2.5} separator = \",\" />\r\n</Typography>\r\n<Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n<Typography variant=\"body2\" >Numbers of recoveries from COVID-19</Typography>\r\n</CardContent>\r\n</Grid>\r\n\r\n<Grid item component={Card} xs={12} md={3}  className = {cx(styles.card, styles.deaths)}>\r\n<CardContent>\r\n<Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n<Typography variant=\"h5\"><CountUp  start = {0} end = {deaths.value} duration ={2.5} separator = \",\" /></Typography>\r\n<Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n<Typography variant=\"body2\" >Numbers of deaths caused by COVID-19</Typography>\r\n</CardContent>\r\n</Grid>\r\n</Grid>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n}\r\n    \r\n\r\nexport default Cards;","import React from 'react';\r\n\r\nexport const Foot = () => {\r\n\r\n    return (\r\n        <p style={{padding:\"12px\",}}> \r\n          © { new Date().getFullYear()} - Developed by <a href=\"javascript:void(0)\" > Ajay Kumar</a>\r\n      \r\n        </p>)\r\n}","import React from 'react';\r\nimport Chart from './components/Charts/Chart';\r\nimport CountryPicker from './components/CountryPicker/CountryPicker';\r\nimport Style from './App.module.css';\r\nimport {FetchData} from './api/index';\r\nimport Cards from './components/Cards/Card';\r\nimport images from './images/image.png';\r\nimport {Foot} from './components/Charts/Footer'\r\nclass App extends React.Component{\r\n\r\n    state = {\r\n        data:{},\r\n        country:'',\r\n    }\r\n    async componentDidMount(){\r\n        const FetchedData =await FetchData();\r\n        \r\n        this.setState({data:FetchedData});\r\n        \r\n    }\r\n\r\n    handleCountryChange = async(country) => {\r\n        const FetchedData =await FetchData(country);\r\n              console.log(FetchedData);\r\n        this.setState({data:FetchedData, country:country});\r\n    }\r\n\r\nrender(){\r\n\r\n    const  {data, country} = this.state;\r\n    return  <div className={Style.container}>\r\n   <img className={Style.image} src={images} alt=\"COVID-19\"/>\r\n   <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n<Cards data={data}/>\r\n\r\n    <Chart data={data} country={country} />\r\n    <Foot />\r\n   \r\n    \r\n    </div>\r\n      \r\n}\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1G9UA\",\"image\":\"App_image__3eg60\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__3C1rh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2_-Fg\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}